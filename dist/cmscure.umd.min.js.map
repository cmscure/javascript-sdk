{"version":3,"file":"cmscure.umd.min.js","sources":["../node_modules/engine.io-parser/build/esm/commons.js","../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../node_modules/engine.io-parser/build/esm/index.js","../node_modules/@socket.io/component-emitter/lib/esm/index.js","../node_modules/engine.io-client/build/esm/globals.js","../node_modules/engine.io-client/build/esm/util.js","../node_modules/engine.io-client/build/esm/transport.js","../node_modules/engine.io-client/build/esm/contrib/parseqs.js","../node_modules/engine.io-client/build/esm/transports/polling.js","../node_modules/engine.io-client/build/esm/contrib/has-cors.js","../node_modules/engine.io-client/build/esm/transports/polling-xhr.js","../node_modules/engine.io-client/build/esm/transports/websocket.js","../node_modules/engine.io-client/build/esm/transports/index.js","../node_modules/engine.io-client/build/esm/transports/webtransport.js","../node_modules/engine.io-client/build/esm/contrib/parseuri.js","../node_modules/engine.io-client/build/esm/socket.js","../node_modules/socket.io-parser/build/esm/is-binary.js","../node_modules/socket.io-parser/build/esm/binary.js","../node_modules/socket.io-parser/build/esm/index.js","../node_modules/socket.io-client/build/esm/on.js","../node_modules/socket.io-client/build/esm/socket.js","../node_modules/socket.io-client/build/esm/contrib/backo2.js","../node_modules/socket.io-client/build/esm/manager.js","../node_modules/socket.io-client/build/esm/index.js","../node_modules/socket.io-client/build/esm/url.js","../src/cmscure.js"],"sourcesContent":["const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach((key) => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nfunction toArray(data) {\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    else if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    else {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n}\nlet TEXT_ENCODER;\nexport function encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n        return packet.data.arrayBuffer().then(toArray).then(callback);\n    }\n    else if (withNativeArrayBuffer &&\n        (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n        return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, (encoded) => {\n        if (!TEXT_ENCODER) {\n            TEXT_ENCODER = new TextEncoder();\n        }\n        callback(TEXT_ENCODER.encode(encoded));\n    });\n}\nexport { encodePacket };\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE, } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nexport const decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType),\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType),\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1),\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type],\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            if (data instanceof Blob) {\n                // from WebSocket + binaryType \"blob\"\n                return data;\n            }\n            else {\n                // from HTTP long-polling or WebTransport\n                return new Blob([data]);\n            }\n        case \"arraybuffer\":\n        default:\n            if (data instanceof ArrayBuffer) {\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n                return data;\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n    }\n};\n","import { encodePacket, encodePacketToBinary } from \"./encodePacket.js\";\nimport { decodePacket } from \"./decodePacket.js\";\nimport { ERROR_PACKET, } from \"./commons.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, (encodedPacket) => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport function createPacketEncoderStream() {\n    return new TransformStream({\n        transform(packet, controller) {\n            encodePacketToBinary(packet, (encodedPacket) => {\n                const payloadLength = encodedPacket.length;\n                let header;\n                // inspired by the WebSocket format: https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers#decoding_payload_length\n                if (payloadLength < 126) {\n                    header = new Uint8Array(1);\n                    new DataView(header.buffer).setUint8(0, payloadLength);\n                }\n                else if (payloadLength < 65536) {\n                    header = new Uint8Array(3);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 126);\n                    view.setUint16(1, payloadLength);\n                }\n                else {\n                    header = new Uint8Array(9);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 127);\n                    view.setBigUint64(1, BigInt(payloadLength));\n                }\n                // first bit indicates whether the payload is plain text (0) or binary (1)\n                if (packet.data && typeof packet.data !== \"string\") {\n                    header[0] |= 0x80;\n                }\n                controller.enqueue(header);\n                controller.enqueue(encodedPacket);\n            });\n        },\n    });\n}\nlet TEXT_DECODER;\nfunction totalLength(chunks) {\n    return chunks.reduce((acc, chunk) => acc + chunk.length, 0);\n}\nfunction concatChunks(chunks, size) {\n    if (chunks[0].length === size) {\n        return chunks.shift();\n    }\n    const buffer = new Uint8Array(size);\n    let j = 0;\n    for (let i = 0; i < size; i++) {\n        buffer[i] = chunks[0][j++];\n        if (j === chunks[0].length) {\n            chunks.shift();\n            j = 0;\n        }\n    }\n    if (chunks.length && j < chunks[0].length) {\n        chunks[0] = chunks[0].slice(j);\n    }\n    return buffer;\n}\nexport function createPacketDecoderStream(maxPayload, binaryType) {\n    if (!TEXT_DECODER) {\n        TEXT_DECODER = new TextDecoder();\n    }\n    const chunks = [];\n    let state = 0 /* State.READ_HEADER */;\n    let expectedLength = -1;\n    let isBinary = false;\n    return new TransformStream({\n        transform(chunk, controller) {\n            chunks.push(chunk);\n            while (true) {\n                if (state === 0 /* State.READ_HEADER */) {\n                    if (totalLength(chunks) < 1) {\n                        break;\n                    }\n                    const header = concatChunks(chunks, 1);\n                    isBinary = (header[0] & 0x80) === 0x80;\n                    expectedLength = header[0] & 0x7f;\n                    if (expectedLength < 126) {\n                        state = 3 /* State.READ_PAYLOAD */;\n                    }\n                    else if (expectedLength === 126) {\n                        state = 1 /* State.READ_EXTENDED_LENGTH_16 */;\n                    }\n                    else {\n                        state = 2 /* State.READ_EXTENDED_LENGTH_64 */;\n                    }\n                }\n                else if (state === 1 /* State.READ_EXTENDED_LENGTH_16 */) {\n                    if (totalLength(chunks) < 2) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 2);\n                    expectedLength = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length).getUint16(0);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else if (state === 2 /* State.READ_EXTENDED_LENGTH_64 */) {\n                    if (totalLength(chunks) < 8) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 8);\n                    const view = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length);\n                    const n = view.getUint32(0);\n                    if (n > Math.pow(2, 53 - 32) - 1) {\n                        // the maximum safe integer in JavaScript is 2^53 - 1\n                        controller.enqueue(ERROR_PACKET);\n                        break;\n                    }\n                    expectedLength = n * Math.pow(2, 32) + view.getUint32(4);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else {\n                    if (totalLength(chunks) < expectedLength) {\n                        break;\n                    }\n                    const data = concatChunks(chunks, expectedLength);\n                    controller.enqueue(decodePacket(isBinary ? data : TEXT_DECODER.decode(data), binaryType));\n                    state = 0 /* State.READ_HEADER */;\n                }\n                if (expectedLength === 0 || expectedLength > maxPayload) {\n                    controller.enqueue(ERROR_PACKET);\n                    break;\n                }\n            }\n        },\n    });\n}\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload, };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\nexport const defaultBinaryType = \"arraybuffer\";\nexport function createCookieJar() { }\n","import { globalThisShim as globalThis } from \"./globals.node.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n/**\n * Generates a random 8-characters string.\n */\nexport function randomString() {\n    return (Date.now().toString(36).substring(3) +\n        Math.random().toString(36).substring(2, 5));\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nimport { encode } from \"./contrib/parseqs.js\";\nexport class TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n    createUri(schema, query = {}) {\n        return (schema +\n            \"://\" +\n            this._hostname() +\n            this._port() +\n            this.opts.path +\n            this._query(query));\n    }\n    _hostname() {\n        const hostname = this.opts.hostname;\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n        if (this.opts.port &&\n            ((this.opts.secure && Number(this.opts.port !== 443)) ||\n                (!this.opts.secure && Number(this.opts.port) !== 80))) {\n            return \":\" + this.opts.port;\n        }\n        else {\n            return \"\";\n        }\n    }\n    _query(query) {\n        const encodedQuery = encode(query);\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","import { Transport } from \"../transport.js\";\nimport { randomString } from \"../util.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nexport class Polling extends Transport {\n    constructor() {\n        super(...arguments);\n        this._polling = false;\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this._poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this._polling || !this.writable) {\n            let total = 0;\n            if (this._polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    _poll() {\n        this._polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this._polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this._poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        const query = this.query || {};\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = randomString();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","import { Polling } from \"./polling.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globals.node.js\";\nimport { hasCORS } from \"../contrib/has-cors.js\";\nfunction empty() { }\nexport class BaseXHR extends Polling {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n        }\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(createRequest, uri, opts) {\n        super();\n        this.createRequest = createRequest;\n        installTimerFunctions(this, opts);\n        this._opts = opts;\n        this._method = opts.method || \"GET\";\n        this._uri = uri;\n        this._data = undefined !== opts.data ? opts.data : null;\n        this._create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    _create() {\n        var _a;\n        const opts = pick(this._opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this._opts.xd;\n        const xhr = (this._xhr = this.createRequest(opts));\n        try {\n            xhr.open(this._method, this._uri, true);\n            try {\n                if (this._opts.extraHeaders) {\n                    // @ts-ignore\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this._opts.extraHeaders) {\n                        if (this._opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this._opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this._method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this._opts.withCredentials;\n            }\n            if (this._opts.requestTimeout) {\n                xhr.timeout = this._opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                var _a;\n                if (xhr.readyState === 3) {\n                    (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(\n                    // @ts-ignore\n                    xhr.getResponseHeader(\"set-cookie\"));\n                }\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this._onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this._onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this._data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this._onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this._index = Request.requestsCount++;\n            Request.requests[this._index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    _onError(err) {\n        this.emitReserved(\"error\", err, this._xhr);\n        this._cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    _cleanup(fromError) {\n        if (\"undefined\" === typeof this._xhr || null === this._xhr) {\n            return;\n        }\n        this._xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this._xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this._index];\n        }\n        this._xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    _onLoad() {\n        const data = this._xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this._cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this._cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\nconst hasXHR2 = (function () {\n    const xhr = newRequest({\n        xdomain: false,\n    });\n    return xhr && xhr.responseType !== null;\n})();\n/**\n * HTTP long-polling based on the built-in `XMLHttpRequest` object.\n *\n * Usage: browser\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\n */\nexport class XHR extends BaseXHR {\n    constructor(opts) {\n        super(opts);\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd }, this.opts);\n        return new Request(newRequest, this.uri(), opts);\n    }\n}\nfunction newRequest(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { pick, randomString } from \"../util.js\";\nimport { encodePacket } from \"engine.io-parser\";\nimport { globalThisShim as globalThis, nextTick } from \"../globals.node.js\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class BaseWS extends Transport {\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws = this.createSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    this.doWrite(packet, data);\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.onerror = () => { };\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        const query = this.query || {};\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = randomString();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n}\nconst WebSocketCtor = globalThis.WebSocket || globalThis.MozWebSocket;\n/**\n * WebSocket transport based on the built-in `WebSocket` object.\n *\n * Usage: browser, Node.js (since v21), Deno, Bun\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket\n * @see https://caniuse.com/mdn-api_websocket\n * @see https://nodejs.org/api/globals.html#websocket\n */\nexport class WS extends BaseWS {\n    createSocket(uri, protocols, opts) {\n        return !isReactNative\n            ? protocols\n                ? new WebSocketCtor(uri, protocols)\n                : new WebSocketCtor(uri)\n            : new WebSocketCtor(uri, protocols, opts);\n    }\n    doWrite(_packet, data) {\n        this.ws.send(data);\n    }\n}\n","import { XHR } from \"./polling-xhr.node.js\";\nimport { WS } from \"./websocket.node.js\";\nimport { WT } from \"./webtransport.js\";\nexport const transports = {\n    websocket: WS,\n    webtransport: WT,\n    polling: XHR,\n};\n","import { Transport } from \"../transport.js\";\nimport { nextTick } from \"../globals.node.js\";\nimport { createPacketDecoderStream, createPacketEncoderStream, } from \"engine.io-parser\";\n/**\n * WebTransport transport based on the built-in `WebTransport` object.\n *\n * Usage: browser, Node.js (with the `@fails-components/webtransport` package)\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebTransport\n * @see https://caniuse.com/webtransport\n */\nexport class WT extends Transport {\n    get name() {\n        return \"webtransport\";\n    }\n    doOpen() {\n        try {\n            // @ts-ignore\n            this._transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this._transport.closed\n            .then(() => {\n            this.onClose();\n        })\n            .catch((err) => {\n            this.onError(\"webtransport error\", err);\n        });\n        // note: we could have used async/await, but that would require some additional polyfills\n        this._transport.ready.then(() => {\n            this._transport.createBidirectionalStream().then((stream) => {\n                const decoderStream = createPacketDecoderStream(Number.MAX_SAFE_INTEGER, this.socket.binaryType);\n                const reader = stream.readable.pipeThrough(decoderStream).getReader();\n                const encoderStream = createPacketEncoderStream();\n                encoderStream.readable.pipeTo(stream.writable);\n                this._writer = encoderStream.writable.getWriter();\n                const read = () => {\n                    reader\n                        .read()\n                        .then(({ done, value }) => {\n                        if (done) {\n                            return;\n                        }\n                        this.onPacket(value);\n                        read();\n                    })\n                        .catch((err) => {\n                    });\n                };\n                read();\n                const packet = { type: \"open\" };\n                if (this.query.sid) {\n                    packet.data = `{\"sid\":\"${this.query.sid}\"}`;\n                }\n                this._writer.write(packet).then(() => this.onOpen());\n            });\n        });\n    }\n    write(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            this._writer.write(packet).then(() => {\n                if (lastPacket) {\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        var _a;\n        (_a = this._transport) === null || _a === void 0 ? void 0 : _a.close();\n    }\n}\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    if (str.length > 8000) {\n        throw \"URI too long\";\n    }\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports as DEFAULT_TRANSPORTS } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nimport { createCookieJar, defaultBinaryType, nextTick, } from \"./globals.node.js\";\nconst withEventListeners = typeof addEventListener === \"function\" &&\n    typeof removeEventListener === \"function\";\nconst OFFLINE_EVENT_LISTENERS = [];\nif (withEventListeners) {\n    // within a ServiceWorker, any event handler for the 'offline' event must be added on the initial evaluation of the\n    // script, so we create one single event listener here which will forward the event to the socket instances\n    addEventListener(\"offline\", () => {\n        OFFLINE_EVENT_LISTENERS.forEach((listener) => listener());\n    }, false);\n}\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes without upgrade mechanism, which means that it will keep the first low-level transport that\n * successfully establishes the connection.\n *\n * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.\n *\n * @example\n * import { SocketWithoutUpgrade, WebSocket } from \"engine.io-client\";\n *\n * const socket = new SocketWithoutUpgrade({\n *   transports: [WebSocket]\n * });\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithUpgrade\n * @see Socket\n */\nexport class SocketWithoutUpgrade extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts) {\n        super();\n        this.binaryType = defaultBinaryType;\n        this.writeBuffer = [];\n        this._prevBufferLen = 0;\n        this._pingInterval = -1;\n        this._pingTimeout = -1;\n        this._maxPayload = -1;\n        /**\n         * The expiration timestamp of the {@link _pingTimeoutTimer} object is tracked, in case the timer is throttled and the\n         * callback is not fired on time. This can happen for example when a laptop is suspended or when a phone is locked.\n         */\n        this._pingTimeoutTime = Infinity;\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            const parsedUri = parse(uri);\n            opts.hostname = parsedUri.host;\n            opts.secure =\n                parsedUri.protocol === \"https\" || parsedUri.protocol === \"wss\";\n            opts.port = parsedUri.port;\n            if (parsedUri.query)\n                opts.query = parsedUri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = [];\n        this._transportsByName = {};\n        opts.transports.forEach((t) => {\n            const transportName = t.prototype.name;\n            this.transports.push(transportName);\n            this._transportsByName[transportName] = t;\n        });\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: false,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        if (withEventListeners) {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this._beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this._beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this._offlineEventListener = () => {\n                    this._onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                OFFLINE_EVENT_LISTENERS.push(this._offlineEventListener);\n            }\n        }\n        if (this.opts.withCredentials) {\n            this._cookieJar = createCookieJar();\n        }\n        this._open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        }, this.opts.transportOptions[name]);\n        return new this._transportsByName[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    _open() {\n        if (this.transports.length === 0) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        const transportName = this.opts.rememberUpgrade &&\n            SocketWithoutUpgrade.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1\n            ? \"websocket\"\n            : this.transports[0];\n        this.readyState = \"opening\";\n        const transport = this.createTransport(transportName);\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this._onDrain.bind(this))\n            .on(\"packet\", this._onPacket.bind(this))\n            .on(\"error\", this._onError.bind(this))\n            .on(\"close\", (reason) => this._onClose(\"transport close\", reason));\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        SocketWithoutUpgrade.priorWebsocketSuccess =\n            \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    _onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this._sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    this._resetPingTimeout();\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this._onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this._pingInterval = data.pingInterval;\n        this._pingTimeout = data.pingTimeout;\n        this._maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this._resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    _resetPingTimeout() {\n        this.clearTimeoutFn(this._pingTimeoutTimer);\n        const delay = this._pingInterval + this._pingTimeout;\n        this._pingTimeoutTime = Date.now() + delay;\n        this._pingTimeoutTimer = this.setTimeoutFn(() => {\n            this._onClose(\"ping timeout\");\n        }, delay);\n        if (this.opts.autoUnref) {\n            this._pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    _onDrain() {\n        this.writeBuffer.splice(0, this._prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this._prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this._getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this._prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    _getWritablePackets() {\n        const shouldCheckPayloadSize = this._maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this._maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Checks whether the heartbeat timer has expired but the socket has not yet been notified.\n     *\n     * Note: this method is private for now because it does not really fit the WebSocket API, but if we put it in the\n     * `write()` method then the message would not be buffered by the Socket.IO client.\n     *\n     * @return {boolean}\n     * @private\n     */\n    /* private */ _hasPingExpired() {\n        if (!this._pingTimeoutTime)\n            return true;\n        const hasExpired = Date.now() > this._pingTimeoutTime;\n        if (hasExpired) {\n            this._pingTimeoutTime = 0;\n            nextTick(() => {\n                this._onClose(\"ping timeout\");\n            }, this.setTimeoutFn);\n        }\n        return hasExpired;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this._sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a message. Alias of {@link Socket#write}.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @return {Socket} for chaining.\n     */\n    send(msg, options, fn) {\n        this._sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    _sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this._onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    _onError(err) {\n        SocketWithoutUpgrade.priorWebsocketSuccess = false;\n        if (this.opts.tryAllTransports &&\n            this.transports.length > 1 &&\n            this.readyState === \"opening\") {\n            this.transports.shift();\n            return this._open();\n        }\n        this.emitReserved(\"error\", err);\n        this._onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    _onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this._pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (withEventListeners) {\n                if (this._beforeunloadEventListener) {\n                    removeEventListener(\"beforeunload\", this._beforeunloadEventListener, false);\n                }\n                if (this._offlineEventListener) {\n                    const i = OFFLINE_EVENT_LISTENERS.indexOf(this._offlineEventListener);\n                    if (i !== -1) {\n                        OFFLINE_EVENT_LISTENERS.splice(i, 1);\n                    }\n                }\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this._prevBufferLen = 0;\n        }\n    }\n}\nSocketWithoutUpgrade.protocol = protocol;\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes with an upgrade mechanism, which means that once the connection is established with the first\n * low-level transport, it will try to upgrade to a better transport.\n *\n * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.\n *\n * @example\n * import { SocketWithUpgrade, WebSocket } from \"engine.io-client\";\n *\n * const socket = new SocketWithUpgrade({\n *   transports: [WebSocket]\n * });\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithoutUpgrade\n * @see Socket\n */\nexport class SocketWithUpgrade extends SocketWithoutUpgrade {\n    constructor() {\n        super(...arguments);\n        this._upgrades = [];\n    }\n    onOpen() {\n        super.onOpen();\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            for (let i = 0; i < this._upgrades.length; i++) {\n                this._probe(this._upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    _probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        SocketWithoutUpgrade.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    SocketWithoutUpgrade.priorWebsocketSuccess =\n                        \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        if (this._upgrades.indexOf(\"webtransport\") !== -1 &&\n            name !== \"webtransport\") {\n            // favor WebTransport\n            this.setTimeoutFn(() => {\n                if (!failed) {\n                    transport.open();\n                }\n            }, 200);\n        }\n        else {\n            transport.open();\n        }\n    }\n    onHandshake(data) {\n        this._upgrades = this._filterUpgrades(data.upgrades);\n        super.onHandshake(data);\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    _filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        for (let i = 0; i < upgrades.length; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes with an upgrade mechanism, which means that once the connection is established with the first\n * low-level transport, it will try to upgrade to a better transport.\n *\n * @example\n * import { Socket } from \"engine.io-client\";\n *\n * const socket = new Socket();\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithoutUpgrade\n * @see SocketWithUpgrade\n */\nexport class Socket extends SocketWithUpgrade {\n    constructor(uri, opts = {}) {\n        const o = typeof uri === \"object\" ? uri : opts;\n        if (!o.transports ||\n            (o.transports && typeof o.transports[0] === \"string\")) {\n            o.transports = (o.transports || [\"polling\", \"websocket\", \"webtransport\"])\n                .map((transportName) => DEFAULT_TRANSPORTS[transportName])\n                .filter((t) => !!t);\n        }\n        super(uri, o);\n    }\n}\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * These strings must not be used as event names, as they have a special meaning.\n */\nconst RESERVED_EVENTS = [\n    \"connect\",\n    \"connect_error\",\n    \"disconnect\",\n    \"disconnecting\",\n    \"newListener\",\n    \"removeListener\", // used by the Node.js EventEmitter\n];\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\nfunction isObject(value) {\n    return Object.prototype.toString.call(value) === \"[object Object]\";\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return isObject(payload);\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || isObject(payload);\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return (Array.isArray(payload) &&\n                    (typeof payload[0] === \"number\" ||\n                        (typeof payload[0] === \"string\" &&\n                            RESERVED_EVENTS.indexOf(payload[0]) === -1)));\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        /**\n         * A map containing acknowledgement handlers.\n         *\n         * The `withError` attribute is used to differentiate handlers that accept an error as first argument:\n         *\n         * - `socket.emit(\"test\", (err, value) => { ... })` with `ackTimeout` option\n         * - `socket.timeout(5000).emit(\"test\", (err, value) => { ... })`\n         * - `const value = await socket.emitWithAck(\"test\")`\n         *\n         * From those that don't:\n         *\n         * - `socket.emit(\"test\", (value) => { ... });`\n         *\n         * In the first case, the handlers will be called with an error when:\n         *\n         * - the timeout is reached\n         * - the socket gets disconnected\n         *\n         * In the second case, the handlers will be simply discarded upon disconnection, since the client will never receive\n         * an acknowledgement from the server.\n         *\n         * @private\n         */\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        var _a, _b, _c;\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = (_b = (_a = this.io.engine) === null || _a === void 0 ? void 0 : _a.transport) === null || _b === void 0 ? void 0 : _b.writable;\n        const isConnected = this.connected && !((_c = this.io.engine) === null || _c === void 0 ? void 0 : _c._hasPingExpired());\n        const discardPacket = this.flags.volatile && !isTransportWritable;\n        if (discardPacket) {\n        }\n        else if (isConnected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        const fn = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, args);\n        };\n        fn.withError = true;\n        this.acks[id] = fn;\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        return new Promise((resolve, reject) => {\n            const fn = (arg1, arg2) => {\n                return arg1 ? reject(arg1) : resolve(arg2);\n            };\n            fn.withError = true;\n            args.push(fn);\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n        this._clearAcks();\n    }\n    /**\n     * Clears the acknowledgement handlers upon disconnection, since the client will never receive an acknowledgement from\n     * the server.\n     *\n     * @private\n     */\n    _clearAcks() {\n        Object.keys(this.acks).forEach((id) => {\n            const isBuffered = this.sendBuffer.some((packet) => String(packet.id) === id);\n            if (!isBuffered) {\n                // note: handlers that do not accept an error as first argument are ignored here\n                const ack = this.acks[id];\n                delete this.acks[id];\n                if (ack.withError) {\n                    ack.call(this, new Error(\"socket has been disconnected\"));\n                }\n            }\n        });\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowledgement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (typeof ack !== \"function\") {\n            return;\n        }\n        delete this.acks[packet.id];\n        // @ts-ignore FIXME ack is incorrectly inferred as 'never'\n        if (ack.withError) {\n            packet.data.unshift(null);\n        }\n        // @ts-ignore\n        ack.apply(this, packet.data);\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        if (!v) {\n            this.skipReconnect = true;\n        }\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        const onError = (err) => {\n            this.cleanup();\n            this._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                this.maybeReconnectOnOpen();\n            }\n        };\n        // emit `error`\n        const errorSub = on(socket, \"error\", onError);\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                onError(new Error(\"timeout\"));\n                socket.close();\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), \n        // @ts-ignore\n        on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called when:\n     *\n     * - the low-level engine is closed\n     * - the parser encountered a badly formatted packet\n     * - all sockets are disconnected\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        var _a;\n        this.cleanup();\n        (_a = this.engine) === null || _a === void 0 ? void 0 : _a.close();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\nexport { Fetch, NodeXHR, XHR, NodeWebSocket, WebSocket, WebTransport, } from \"engine.io-client\";\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","/**\n * CMSCure JavaScript SDK\n * Official SDK for integrating CMSCure content management into web applications\n * \n * Enhanced with Revolutionary Automatic Real-time Updates!\n * - All core methods now automatically enable real-time updates\n * - Zero configuration required for real-time behavior  \n * - 100% backward compatible with existing implementations\n * \n * @version 1.1.0\n * @author CMSCure Team\n * @license MIT\n */\n\n// Import Socket.IO for real-time functionality\nimport { io } from 'socket.io-client';\n\nclass CMSCureSDK extends EventTarget {\n  static #instance;\n\n  #config = null;\n  #authToken = null;\n  #cache = {};\n  #dataStoreCache = {};\n  #availableLanguages = ['en'];\n  #currentLanguage = 'en';\n  #isInitialized = false;\n  #serverUrl = 'https://gateway.cmscure.com';\n\n  // Enhanced Auto Real-time Update Properties\n  #socket = null;\n  #enableAutoRealTimeUpdates = true; // Default: enabled for revolutionary UX\n  #autoSubscribedTabs = new Set();\n  #autoSubscribedColors = false;\n  #autoSubscribedImages = false;\n  #autoSubscribedDataStores = new Set();\n\n  constructor() {\n    super();\n    // Enforce singleton pattern to prevent multiple instances.\n    if (CMSCureSDK.#instance) {\n      console.log('[CMSCureSDK] Returning existing singleton instance.');\n      return CMSCureSDK.#instance;\n    }\n    CMSCureSDK.#instance = this;\n    console.log('[CMSCureSDK] Singleton instance created.');\n    this.#loadStateFromStorage();\n  }\n\n  /**\n     * Configures the SDK with project credentials and initializes authentication\n     * \n     * Enhanced with Automatic Real-time Updates:\n     * - Real-time updates enabled by default for revolutionary UX\n     * - All core methods automatically subscribe to live updates\n     * - Maintains 100% backward compatibility\n     * \n     * @param {object} config - Configuration object\n     * @param {string} config.projectId - Your project's unique ID\n     * @param {string} config.apiKey - Your project's API key\n     * @param {string} [config.defaultLanguage] - Optional default language\n     * @param {boolean} [config.enableAutoRealTimeUpdates=true] - Enable automatic real-time updates\n     * @returns {Promise<void>}\n     */\n  async configure(config) {\n    if (this.#isInitialized) {\n      console.warn('[CMSCureSDK] SDK already configured.');\n      return;\n    }\n        \n    if (!config.projectId || !config.apiKey) {\n      console.error('[CMSCureSDK] Configuration failed: Project ID and API Key are required.');\n      return;\n    }\n        \n    this.#config = config;\n    this.#currentLanguage = config.defaultLanguage || this.#currentLanguage;\n    this.#enableAutoRealTimeUpdates = config.enableAutoRealTimeUpdates !== false; // Default: true\n        \n    console.log(`[CMSCureSDK] Configuration set. Auto real-time updates: ${this.#enableAutoRealTimeUpdates ? 'enabled' : 'disabled'}`);\n        \n    // Perform the initial sync\n    await this.#authenticateAndSync();\n    \n    // Initialize real-time connection if enabled\n    if (this.#enableAutoRealTimeUpdates) {\n      await this.#initializeRealTimeConnection();\n    }\n    \n    this.#isInitialized = true;\n  }\n\n  /**\n     * Gets the current language\n     * @returns {string} Current language code\n     */\n  getLanguage() {\n    return this.#currentLanguage;\n  }\n\n  /**\n     * Sets the current language and updates the UI\n     * @param {string} language - Language code to set\n     */\n  setLanguage(language) {\n    if (this.#availableLanguages.includes(language)) {\n      this.#currentLanguage = language;\n      localStorage.setItem('cmscure_current_language', language);\n      this.dispatchEvent(new CustomEvent('languageChanged', { detail: { language } }));\n      this.dispatchEvent(new CustomEvent('contentUpdated', { detail: { reason: 'LanguageChanged' } }));\n      console.log(`[CMSCureSDK] Language changed to: ${language}`);\n    } else {\n      console.warn(`[CMSCureSDK] Language '${language}' is not available.`);\n    }\n  }\n\n  /**\n     * Gets available languages\n     * @returns {string[]} Array of available language codes\n     */\n  getAvailableLanguages() {\n    return [...this.#availableLanguages];\n  }\n\n  /**\n     * Gets a translation for a specific key and tab\n     * \n     * Enhanced with Automatic Real-time Updates:\n     * - Maintains exact same method signature for backward compatibility\n     * - Automatically subscribes to real-time updates for accessed tabs\n     * - Returns immediate cached values while setting up real-time subscriptions in background\n     * - No breaking changes for existing implementations\n     * \n     * @param {string} key - Translation key\n     * @param {string} tab - Tab name\n     * @returns {string} Translated text or fallback\n     */\n  translation(key, tab) {\n    // Auto-subscribe to real-time updates for this tab (non-blocking)\n    this.#autoSubscribeToTab(tab);\n    \n    const value = this.#cache[tab]?.[key]?.[this.#currentLanguage];\n    return value || `[${tab}:${key}]`;\n  }\n\n  /**\n     * Gets an image URL for a given key\n     * \n     * Enhanced with Automatic Real-time Updates:\n     * - Maintains exact same method signature for backward compatibility\n     * - Automatically subscribes to real-time updates for global images when called\n     * - Returns immediate cached values while setting up real-time subscriptions in background\n     * - No breaking changes for existing implementations\n     * \n     * @param {string} key - Image key\n     * @returns {string|null} Image URL or null if not found\n     */\n  image(key) {\n    // Auto-subscribe to real-time updates for global images (non-blocking)\n    this.#autoSubscribeToImages();\n    \n    return this.#cache['__images__']?.[key]?.['url'] || null;\n  }\n\n  /**\n     * Gets a color value for a given key\n     * \n     * Enhanced with Automatic Real-time Updates:\n     * - Maintains exact same method signature for backward compatibility\n     * - Automatically subscribes to real-time updates for colors when called\n     * - Returns immediate cached values while setting up real-time subscriptions in background\n     * - No breaking changes for existing implementations\n     * \n     * @param {string} key - Color key\n     * @returns {string|null} Color hex value or null if not found\n     */\n  color(key) {\n    // Auto-subscribe to real-time updates for colors (non-blocking)\n    this.#autoSubscribeToColors();\n    \n    return this.#cache['__colors__']?.[key]?.['hex'] || null;\n  }\n\n  /**\n     * Gets data store items by API identifier\n     * \n     * Enhanced with Automatic Real-time Updates:\n     * - Maintains exact same method signature for backward compatibility\n     * - Automatically subscribes to real-time updates for accessed data stores\n     * - Returns immediate cached values while setting up real-time subscriptions in background\n     * - No breaking changes for existing implementations\n     * \n     * @param {string} apiIdentifier - Data store API identifier\n     * @returns {Array} Array of data store items\n     */\n  dataStore(apiIdentifier) {\n    // Auto-subscribe to real-time updates for this data store (non-blocking)\n    this.#autoSubscribeToDataStore(apiIdentifier);\n    \n    return this.#dataStoreCache[apiIdentifier] || [];\n  }\n\n  // --- Enhanced Auto Real-time Utility Methods ---\n\n  /**\n   * Returns a list of tabs that have been automatically subscribed to real-time updates\n   * @returns {string[]} Array of tab names that are auto-subscribed\n   */\n  getAutoSubscribedTabs() {\n    return Array.from(this.#autoSubscribedTabs);\n  }\n\n  /**\n   * Returns whether colors have been automatically subscribed to real-time updates\n   * @returns {boolean} True if colors are auto-subscribed\n   */\n  isColorsAutoSubscribed() {\n    return this.#autoSubscribedColors;\n  }\n\n  /**\n   * Returns whether images have been automatically subscribed to real-time updates\n   * @returns {boolean} True if images are auto-subscribed\n   */\n  isImagesAutoSubscribed() {\n    return this.#autoSubscribedImages;\n  }\n\n  /**\n   * Returns a list of data stores that have been automatically subscribed to real-time updates\n   * @returns {string[]} Array of data store identifiers that are auto-subscribed\n   */\n  getAutoSubscribedDataStores() {\n    return Array.from(this.#autoSubscribedDataStores);\n  }\n\n  // --- Private Methods ---\n\n  /**\n     * Initializes real-time Socket.IO connection for live updates\n     * @private\n     */\n  async #initializeRealTimeConnection() {\n    if (!this.#config || !this.#authToken) {\n      console.warn('[CMSCureSDK] Cannot initialize real-time connection: missing config or auth token');\n      return;\n    }\n\n    try {\n      // Initialize Socket.IO connection\n      this.#socket = io(this.#serverUrl, {\n        auth: {\n          token: this.#authToken,\n          projectId: this.#config.projectId\n        },\n        transports: ['websocket', 'polling'],\n        upgrade: true,\n        rememberUpgrade: true\n      });\n\n      // Set up event listeners\n      this.#socket.on('connect', () => {\n        console.log('[CMSCureSDK] Real-time connection established');\n      });\n\n      this.#socket.on('disconnect', () => {\n        console.log('[CMSCureSDK] Real-time connection disconnected');\n      });\n\n      this.#socket.on('translationUpdated', (data) => {\n        this.#handleTranslationUpdate(data);\n      });\n\n      this.#socket.on('colorUpdated', (data) => {\n        this.#handleColorUpdate(data);\n      });\n\n      this.#socket.on('imageUpdated', (data) => {\n        this.#handleImageUpdate(data);\n      });\n\n      this.#socket.on('dataStoreUpdated', (data) => {\n        this.#handleDataStoreUpdate(data);\n      });\n\n      // Handle connection errors\n      this.#socket.on('connect_error', (error) => {\n        console.warn('[CMSCureSDK] Real-time connection error:', error);\n      });\n\n    } catch (error) {\n      console.error('[CMSCureSDK] Failed to initialize real-time connection:', error);\n    }\n  }\n\n  /**\n   * Automatically subscribes to real-time updates for a specific tab\n   * @param {string} tab - Tab name to auto-subscribe\n   * @private\n   */\n  #autoSubscribeToTab(tab) {\n    if (!this.#enableAutoRealTimeUpdates || !this.#socket || this.#autoSubscribedTabs.has(tab)) {\n      return;\n    }\n\n    // Use setTimeout to make this non-blocking for the translation() method\n    setTimeout(() => {\n      try {\n        this.#autoSubscribedTabs.add(tab);\n        this.#socket.emit('subscribeToTab', { \n          projectId: this.#config.projectId, \n          tabName: tab \n        });\n        console.log(`[CMSCureSDK] Auto-subscribed to real-time updates for tab: ${tab}`);\n      } catch (error) {\n        console.error(`[CMSCureSDK] Failed to auto-subscribe to tab '${tab}':`, error);\n      }\n    }, 0);\n  }\n\n  /**\n   * Automatically subscribes to real-time updates for colors\n   * @private\n   */\n  #autoSubscribeToColors() {\n    if (!this.#enableAutoRealTimeUpdates || !this.#socket || this.#autoSubscribedColors) {\n      return;\n    }\n\n    // Use setTimeout to make this non-blocking for the color() method\n    setTimeout(() => {\n      try {\n        this.#autoSubscribedColors = true;\n        this.#socket.emit('subscribeToColors', { \n          projectId: this.#config.projectId \n        });\n        console.log('[CMSCureSDK] Auto-subscribed to real-time updates for colors');\n      } catch (error) {\n        console.error('[CMSCureSDK] Failed to auto-subscribe to colors:', error);\n      }\n    }, 0);\n  }\n\n  /**\n   * Automatically subscribes to real-time updates for global images\n   * @private\n   */\n  #autoSubscribeToImages() {\n    if (!this.#enableAutoRealTimeUpdates || !this.#socket || this.#autoSubscribedImages) {\n      return;\n    }\n\n    // Use setTimeout to make this non-blocking for the image() method\n    setTimeout(() => {\n      try {\n        this.#autoSubscribedImages = true;\n        this.#socket.emit('subscribeToImages', { \n          projectId: this.#config.projectId \n        });\n        console.log('[CMSCureSDK] Auto-subscribed to real-time updates for images');\n      } catch (error) {\n        console.error('[CMSCureSDK] Failed to auto-subscribe to images:', error);\n      }\n    }, 0);\n  }\n\n  /**\n   * Automatically subscribes to real-time updates for a specific data store\n   * @param {string} apiIdentifier - Data store identifier to auto-subscribe\n   * @private\n   */\n  #autoSubscribeToDataStore(apiIdentifier) {\n    if (!this.#enableAutoRealTimeUpdates || !this.#socket || this.#autoSubscribedDataStores.has(apiIdentifier)) {\n      return;\n    }\n\n    // Use setTimeout to make this non-blocking for the dataStore() method\n    setTimeout(() => {\n      try {\n        this.#autoSubscribedDataStores.add(apiIdentifier);\n        this.#socket.emit('subscribeToDataStore', { \n          projectId: this.#config.projectId, \n          apiIdentifier: apiIdentifier \n        });\n        console.log(`[CMSCureSDK] Auto-subscribed to real-time updates for data store: ${apiIdentifier}`);\n      } catch (error) {\n        console.error(`[CMSCureSDK] Failed to auto-subscribe to data store '${apiIdentifier}':`, error);\n      }\n    }, 0);\n  }\n\n  /**\n   * Handles real-time translation updates from Socket.IO\n   * @param {object} data - Update data from server\n   * @private\n   */\n  #handleTranslationUpdate(data) {\n    try {\n      const { tabName, key, values } = data;\n      \n      if (!this.#cache[tabName]) {\n        this.#cache[tabName] = {};\n      }\n      \n      this.#cache[tabName][key] = values;\n      this.#saveCacheToStorage();\n      \n      // Dispatch events for UI updates\n      this.dispatchEvent(new CustomEvent('translationUpdated', { \n        detail: { tabName, key, values } \n      }));\n      this.dispatchEvent(new CustomEvent('contentUpdated', { \n        detail: { reason: 'TranslationUpdated', tabName, key } \n      }));\n      \n      console.log(`[CMSCureSDK] Real-time update: translation '${key}' in tab '${tabName}'`);\n    } catch (error) {\n      console.error('[CMSCureSDK] Error handling translation update:', error);\n    }\n  }\n\n  /**\n   * Handles real-time color updates from Socket.IO\n   * @param {object} data - Update data from server\n   * @private\n   */\n  #handleColorUpdate(data) {\n    try {\n      const { key, value } = data;\n      \n      if (!this.#cache['__colors__']) {\n        this.#cache['__colors__'] = {};\n      }\n      \n      this.#cache['__colors__'][key] = { hex: value };\n      this.#saveCacheToStorage();\n      \n      // Dispatch events for UI updates\n      this.dispatchEvent(new CustomEvent('colorUpdated', { \n        detail: { key, value } \n      }));\n      this.dispatchEvent(new CustomEvent('contentUpdated', { \n        detail: { reason: 'ColorUpdated', key } \n      }));\n      \n      console.log(`[CMSCureSDK] Real-time update: color '${key}' = ${value}`);\n    } catch (error) {\n      console.error('[CMSCureSDK] Error handling color update:', error);\n    }\n  }\n\n  /**\n   * Handles real-time image updates from Socket.IO\n   * @param {object} data - Update data from server\n   * @private\n   */\n  #handleImageUpdate(data) {\n    try {\n      const { key, url } = data;\n      \n      if (!this.#cache['__images__']) {\n        this.#cache['__images__'] = {};\n      }\n      \n      this.#cache['__images__'][key] = { url: url };\n      this.#saveCacheToStorage();\n      \n      // Dispatch events for UI updates\n      this.dispatchEvent(new CustomEvent('imageUpdated', { \n        detail: { key, url } \n      }));\n      this.dispatchEvent(new CustomEvent('contentUpdated', { \n        detail: { reason: 'ImageUpdated', key } \n      }));\n      \n      console.log(`[CMSCureSDK] Real-time update: image '${key}' = ${url}`);\n    } catch (error) {\n      console.error('[CMSCureSDK] Error handling image update:', error);\n    }\n  }\n\n  /**\n   * Handles real-time data store updates from Socket.IO\n   * @param {object} data - Update data from server\n   * @private\n   */\n  #handleDataStoreUpdate(data) {\n    try {\n      const { apiIdentifier, items } = data;\n      \n      this.#dataStoreCache[apiIdentifier] = items || [];\n      this.#saveCacheToStorage();\n      \n      // Dispatch events for UI updates\n      this.dispatchEvent(new CustomEvent('dataStoreUpdated', { \n        detail: { apiIdentifier, items } \n      }));\n      this.dispatchEvent(new CustomEvent('contentUpdated', { \n        detail: { reason: 'DataStoreUpdated', apiIdentifier } \n      }));\n      \n      console.log(`[CMSCureSDK] Real-time update: data store '${apiIdentifier}' with ${items.length} items`);\n    } catch (error) {\n      console.error('[CMSCureSDK] Error handling data store update:', error);\n    }\n  }\n\n  /**\n     * Loads cached state from localStorage\n     * @private\n     */\n  #loadStateFromStorage() {\n    try {\n      const token = localStorage.getItem('cmscure_auth_token');\n      const languages = localStorage.getItem('cmscure_available_languages');\n      const currentLang = localStorage.getItem('cmscure_current_language');\n      const cache = localStorage.getItem('cmscure_cache');\n      const dataStoreCache = localStorage.getItem('cmscure_datastore_cache');\n\n      if (token) this.#authToken = token;\n      if (languages) this.#availableLanguages = JSON.parse(languages);\n      if (currentLang) this.#currentLanguage = currentLang;\n      if (cache) this.#cache = JSON.parse(cache);\n      if (dataStoreCache) this.#dataStoreCache = JSON.parse(dataStoreCache);\n\n      console.log('[CMSCureSDK] Loaded state. Current language:', this.#currentLanguage);\n    } catch (error) {\n      console.error('[CMSCureSDK] Failed to load state from localStorage:', error);\n    }\n  }\n\n  /**\n     * Saves cache to localStorage\n     * @private\n     */\n  #saveCacheToStorage() {\n    try {\n      localStorage.setItem('cmscure_cache', JSON.stringify(this.#cache));\n      localStorage.setItem('cmscure_datastore_cache', JSON.stringify(this.#dataStoreCache));\n    } catch (error) {\n      console.error('[CMSCureSDK] Failed to save cache to localStorage:', error);\n    }\n  }\n\n  /**\n     * Authenticates with the server and syncs all content\n     * @private\n     */\n  async #authenticateAndSync() {\n    if (!this.#config) {\n      console.error('[CMSCureSDK] Configuration not set. Call configure() first.');\n      return;\n    }\n\n    try {\n      console.log('[CMSCureSDK] Authenticating...');\n            \n      const response = await fetch(`${this.#serverUrl}/api/sdk/auth`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          projectId: this.#config.projectId,\n          apiKey: this.#config.apiKey\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error(`Authentication failed: ${response.status}`);\n      }\n\n      const data = await response.json();\n            \n      if (!data.success) {\n        throw new Error('Authentication failed');\n      }\n\n      this.#authToken = data.token;\n      this.#availableLanguages = data.availableLanguages || ['en'];\n\n      // Save to localStorage\n      localStorage.setItem('cmscure_auth_token', this.#authToken);\n      localStorage.setItem('cmscure_available_languages', JSON.stringify(this.#availableLanguages));\n\n      console.log('[CMSCureSDK] Authentication successful. Available languages:', this.#availableLanguages);\n      console.log('[CMSCureSDK] Syncing all content...');\n\n      // Create a list of all sync operations to run in parallel\n      const syncPromises = [\n        ...data.tabs.map(tab => this.#syncTab(tab)),\n        ...data.stores.map(store => this.#syncStore(store)),\n        this.#syncColors(),\n        this.#syncImages(),\n      ];\n\n      // Wait for all syncs to complete\n      await Promise.all(syncPromises);\n\n      // After all data is fetched and the cache is updated, save it once\n      this.#saveCacheToStorage();\n            \n      // Dispatch a final event indicating the initial sync is complete\n      this.dispatchEvent(new CustomEvent('contentUpdated', { detail: { reason: 'InitialSyncComplete' } }));\n      console.log('[CMSCureSDK] Initial sync complete.');\n\n    } catch (error) {\n      console.error('[CMSCureSDK] Authentication or initial sync failed:', error);\n    }\n  }\n\n  /**\n     * Syncs translations for a specific tab\n     * @private\n     */\n  async #syncTab(tab) {\n    try {\n      const response = await fetch(`${this.#serverUrl}/api/sdk/translations/${this.#config.projectId}/${tab}`, {\n        method: 'POST',\n        headers: { \n          'Authorization': `Bearer ${this.#authToken}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          projectId: this.#config.projectId,\n          tabName: tab\n        })\n      });\n            \n      if (response.status === 404) return; // No content for this tab, not an error\n      if (!response.ok) throw new Error(`HTTP error ${response.status}`);\n            \n      const data = await response.json();\n      const keyMap = {};\n      (data.keys || []).forEach(item => { keyMap[item.key] = item.values; });\n            \n      this.#cache[tab] = keyMap;\n      console.log(`[CMSCureSDK] Synced tab: ${tab}`);\n    } catch (error) {\n      console.error(`[CMSCureSDK] Failed to sync tab '${tab}':`, error);\n    }\n  }\n    \n  /**\n     * Syncs images from the server\n     * @private\n     */\n  async #syncImages() {\n    try {\n      const response = await fetch(`${this.#serverUrl}/api/sdk/images/${this.#config.projectId}`, {\n        method: 'POST',\n        headers: { \n          'Authorization': `Bearer ${this.#authToken}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          projectId: this.#config.projectId\n        })\n      });\n            \n      if (response.status === 404) return; // No images, not an error\n      if (!response.ok) throw new Error(`HTTP error ${response.status}`);\n            \n      const data = await response.json();\n      const imageMap = {};\n      (data || []).forEach(item => { imageMap[item.key] = { url: item.url }; });\n            \n      this.#cache['__images__'] = imageMap;\n      console.log('[CMSCureSDK] Synced images.');\n    } catch (error) {\n      console.error('[CMSCureSDK] Failed to sync images:', error);\n    }\n  }\n\n  /**\n     * Syncs colors from the server\n     * @private\n     */\n  async #syncColors() {\n    try {\n      const response = await fetch(`${this.#serverUrl}/api/sdk/colors/${this.#config.projectId}`, {\n        method: 'POST',\n        headers: { \n          'Authorization': `Bearer ${this.#authToken}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          projectId: this.#config.projectId\n        })\n      });\n            \n      if (response.status === 404) return; // No colors, not an error\n      if (!response.ok) throw new Error(`HTTP error ${response.status}`);\n            \n      const data = await response.json();\n      const colorMap = {};\n      (data || []).forEach(item => { colorMap[item.key] = { hex: item.value }; });\n            \n      this.#cache['__colors__'] = colorMap;\n      console.log('[CMSCureSDK] Synced colors.');\n    } catch (error) {\n      console.error('[CMSCureSDK] Failed to sync colors:', error);\n    }\n  }\n    \n  /**\n     * Syncs data store by API identifier\n     * @private\n     */\n  async #syncStore(apiIdentifier) {\n    try {\n      const response = await fetch(`${this.#serverUrl}/api/sdk/store/${this.#config.projectId}/${apiIdentifier}`, {\n        method: 'POST',\n        headers: { \n          'Authorization': `Bearer ${this.#authToken}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          projectId: this.#config.projectId,\n          apiIdentifier: apiIdentifier\n        })\n      });\n            \n      if (response.status === 404) return; // No content, not an error\n      if (!response.ok) throw new Error(`HTTP error ${response.status}`);\n\n      const data = await response.json();\n      this.#dataStoreCache[apiIdentifier] = data.items || [];\n      console.log(`[CMSCureSDK] Synced data store: ${apiIdentifier}`);\n    } catch (error) {\n      console.error(`[CMSCureSDK] Failed to sync data store '${apiIdentifier}':`, error);\n    }\n  }\n\n  /**\n   * Cleans up resources and disconnects real-time connection\n   * Call this when the SDK is no longer needed (e.g., page unload)\n   */\n  disconnect() {\n    if (this.#socket) {\n      console.log('[CMSCureSDK] Disconnecting real-time connection...');\n      this.#socket.disconnect();\n      this.#socket = null;\n    }\n    \n    // Reset auto-subscription tracking\n    this.#autoSubscribedTabs.clear();\n    this.#autoSubscribedColors = false;\n    this.#autoSubscribedImages = false;\n    this.#autoSubscribedDataStores.clear();\n    \n    console.log('[CMSCureSDK] SDK disconnected and cleaned up.');\n  }\n}\n\n// Export the class as default for ES modules\nexport default CMSCureSDK;\n\n// For CommonJS environments  \nif (typeof module !== 'undefined' && module.exports) {\n  module.exports = CMSCureSDK;\n}\n\n// For AMD/RequireJS environments\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return CMSCureSDK;\n  });\n}\n\n// For browser environments (UMD)\nif (typeof window !== 'undefined') {\n  window.CMSCureSDK = CMSCureSDK;\n}\n"],"names":["PACKET_TYPES","Object","create","PACKET_TYPES_REVERSE","keys","forEach","key","ERROR_PACKET","type","data","withNativeBlob","Blob","prototype","toString","call","withNativeArrayBuffer","ArrayBuffer","isView","obj","buffer","encodePacket","supportsBinary","callback","encodeBlobAsBase64","fileReader","FileReader","onload","content","result","split","readAsDataURL","toArray","Uint8Array","byteOffset","byteLength","TEXT_ENCODER","chars","lookup","i","charCodeAt","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","length","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","p","arraybuffer","bytes","decode","SEPARATOR","String","fromCharCode","createPacketEncoderStream","TransformStream","transform","packet","controller","arrayBuffer","then","encoded","TextEncoder","encode","encodePacketToBinary","payloadLength","header","DataView","setUint8","view","setUint16","setBigUint64","BigInt","enqueue","TEXT_DECODER","totalLength","chunks","reduce","acc","chunk","concatChunks","size","shift","j","slice","Emitter","mixin","on","addEventListener","event","fn","this","_callbacks","push","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","args","Array","emitReserved","listeners","hasListeners","nextTick","Promise","resolve","setTimeoutFn","globalThisShim","self","window","Function","pick","attr","k","hasOwnProperty","NATIVE_SET_TIMEOUT","globalThis","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","bind","clearTimeoutFn","str","c","l","utf8Length","Math","ceil","randomString","Date","now","random","TransportError","Error","constructor","reason","description","context","super","Transport","writable","query","socket","forceBase64","onError","open","readyState","doOpen","close","doClose","onClose","send","packets","write","onOpen","onData","onPacket","details","pause","onPause","createUri","schema","_hostname","_port","path","_query","hostname","indexOf","port","secure","Number","encodedQuery","encodeURIComponent","Polling","_polling","name","_poll","total","doPoll","encodedPayload","encodedPackets","decodedPacket","decodePayload","count","join","encodePayload","doWrite","uri","timestampRequests","timestampParam","sid","b64","value","XMLHttpRequest","err","hasCORS","empty","BaseXHR","location","isSSL","protocol","xd","req","request","method","xhrStatus","pollXhr","Request","createRequest","_opts","_method","_uri","_data","undefined","_create","_a","xdomain","xhr","_xhr","extraHeaders","setDisableHeaderCheck","setRequestHeader","e","cookieJar","addCookies","withCredentials","requestTimeout","timeout","onreadystatechange","parseCookies","getResponseHeader","status","_onLoad","_onError","document","_index","requestsCount","requests","_cleanup","fromError","abort","responseText","attachEvent","unloadHandler","hasXHR2","newRequest","responseType","concat","isReactNative","navigator","product","toLowerCase","BaseWS","protocols","headers","ws","createSocket","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","WebSocketCtor","WebSocket","MozWebSocket","transports","websocket","_packet","webtransport","_transport","WebTransport","transportOptions","closed","catch","ready","createBidirectionalStream","stream","decoderStream","maxPayload","TextDecoder","state","expectedLength","isBinary","headerArray","getUint16","n","getUint32","pow","createPacketDecoderStream","MAX_SAFE_INTEGER","reader","readable","pipeThrough","getReader","encoderStream","pipeTo","_writer","getWriter","read","done","polling","assign","re","parts","parse","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","regx","names","queryKey","$0","$1","$2","withEventListeners","OFFLINE_EVENT_LISTENERS","listener","SocketWithoutUpgrade","writeBuffer","_prevBufferLen","_pingInterval","_pingTimeout","_maxPayload","_pingTimeoutTime","Infinity","parsedUri","_transportsByName","t","transportName","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","perMessageDeflate","threshold","closeOnBeforeunload","qs","qry","pairs","pair","decodeURIComponent","_beforeunloadEventListener","transport","_offlineEventListener","_onClose","_cookieJar","createCookieJar","_open","createTransport","EIO","id","priorWebsocketSuccess","setTransport","_onDrain","_onPacket","flush","onHandshake","JSON","_sendPacket","_resetPingTimeout","code","pingInterval","pingTimeout","_pingTimeoutTimer","delay","upgrading","_getWritablePackets","payloadSize","_hasPingExpired","hasExpired","msg","options","compress","cleanupAndClose","waitForUpgrade","tryAllTransports","SocketWithUpgrade","_upgrades","_probe","failed","onTransportOpen","cleanup","freezeTransport","error","onTransportClose","onupgrade","to","_filterUpgrades","upgrades","filteredUpgrades","o","map","DEFAULT_TRANSPORTS","filter","withNativeFile","File","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","num","newData","reconstructPacket","_reconstructPacket","RESERVED_EVENTS","PacketType","isObject","Decoder","reviver","add","reconstructor","decodeString","isBinaryEvent","BINARY_EVENT","BINARY_ACK","EVENT","ACK","BinaryReconstructor","takeBinaryData","start","buf","nsp","next","payload","tryParse","substr","isPayloadValid","CONNECT","DISCONNECT","CONNECT_ERROR","destroy","finishedReconstruction","reconPack","binData","replacer","encodeAsString","encodeAsBinary","stringify","deconstruction","unshift","freeze","connect","connect_error","disconnect","disconnecting","newListener","Socket","io","connected","recovered","receiveBuffer","sendBuffer","_queue","_queueSeq","ids","acks","flags","auth","_autoConnect","disconnected","subEvents","subs","onpacket","active","_readyState","_b","_c","retries","fromQueue","volatile","_addToQueue","ack","pop","_registerAckCallback","isTransportWritable","engine","isConnected","notifyOutgoingListeners","ackTimeout","timer","withError","emitWithAck","reject","arg1","arg2","tryCount","pending","responseArgs","_drainQueue","force","_sendConnectPacket","_pid","pid","offset","_lastOffset","_clearAcks","some","onconnect","onevent","onack","ondisconnect","message","emitEvent","_anyListeners","sent","emitBuffered","subDestroy","onAny","prependAny","offAny","listenersAny","onAnyOutgoing","_anyOutgoingListeners","prependAnyOutgoing","offAnyOutgoing","listenersAnyOutgoing","Backoff","ms","min","max","factor","jitter","attempts","duration","rand","deviation","floor","reset","setMin","setMax","setJitter","Manager","nsps","reconnection","reconnectionAttempts","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","Encoder","decoder","autoConnect","v","_reconnection","skipReconnect","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","Engine","openSubDestroy","errorSub","onping","ondata","ondecoded","_destroy","_close","onreconnect","attempt","cache","parsed","loc","test","href","url","sameNamespace","forceNew","multiplex","CMSCureSDK","EventTarget","static","config","authToken","dataStoreCache","availableLanguages","currentLanguage","isInitialized","serverUrl","enableAutoRealTimeUpdates","autoSubscribedTabs","Set","autoSubscribedColors","autoSubscribedImages","autoSubscribedDataStores","instance","console","log","loadStateFromStorage","configure","warn","projectId","apiKey","defaultLanguage","authenticateAndSync","initializeRealTimeConnection","getLanguage","setLanguage","language","includes","localStorage","setItem","dispatchEvent","CustomEvent","detail","getAvailableLanguages","translation","tab","autoSubscribeToTab","image","autoSubscribeToImages","color","autoSubscribeToColors","dataStore","apiIdentifier","autoSubscribeToDataStore","getAutoSubscribedTabs","from","isColorsAutoSubscribed","isImagesAutoSubscribed","getAutoSubscribedDataStores","token","handleTranslationUpdate","handleColorUpdate","handleImageUpdate","handleDataStoreUpdate","has","tabName","values","saveCacheToStorage","hex","items","getItem","languages","currentLang","response","fetch","body","ok","json","success","syncPromises","tabs","syncTab","stores","store","syncStore","syncColors","syncImages","all","Authorization","keyMap","item","imageMap","colorMap","clear","module","exports","define","amd"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}